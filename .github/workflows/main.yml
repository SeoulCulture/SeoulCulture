name: Java CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle
          
    - name: Build with Gradle
      run: ./gradlew bootJar -x test
      
  deploy:
    runs-on: ubuntu-latest
    needs: build

    env:
      DEPLOY_PATH: "/home/${{ secrets.DEPLOY_USER }}/SeoulCulture/build/libs/"
      DEPLOY_HOST: ${{ secrets.DEPLOY_SERVER }}
      DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
      DEPLOY_PASSWORD: ${{ secrets.DEPLOY_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy JAR to server
        uses: appleboy/scp-action@v0.1.2
        with:
          host: ${{ env.DEPLOY_HOST }}
          username: ${{ env.DEPLOY_USER }}
          password: ${{ env.DEPLOY_PASSWORD }}
          port: 22 
          source: "build/libs/*.jar" 
          target:  ${env.DEPLOY_PATH}
          
      - name: Run
        run: |
          ssh -i ${{ secrets.SSH_PRIVATE_KEY }} -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "java -jar  ${env.DEPLOY_PATH}*.jar
